{"version":3,"sources":["utils/constants.js","components/Filter/Chip.js","components/Filter/index.js","components/Card/index.js","components/Footer/index.js","utils/createActionTypes.js","utils/api.js","app/actions.js","app/reducer.js","app/index.js","serviceWorker.js","index.js"],"names":["YEARS","Chip","value","active","onClick","className","toLowerCase","Filter","filterClick","initial","console","log","useState","setActive","filterUpdate","key","map","year","Card","data","isMobile","window","innerWidth","alt","src","links","mission_patch_small","mission_name","flight_number","mission_id","length","id","launch_year","launch_success","launch_site","site_name","Footer","href","createActionTypes","prefix","actionTypeList","reduce","acc","item","backendService","axios","create","baseURL","timeout","interceptors","request","use","response","appActions","fetchData","params","dispatch","type","FETCH_DATA_REQUEST","apiRequest","method","url","getRequestConfig","then","res","FETCH_DATA_SUCCESS","payload","catch","e","error","FETCH_DATA_ERROR","defaultState","isFetching","isFetched","appReducer","state","action","App","useReducer","history","useHistory","location","useLocation","URLSearchParams","search","useEffect","query","toString","entries","initialState","has","set","append","push","pathname","handleFilterClick","i","Boolean","hostname","match","ReactDOM","render","StrictMode","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.614f4e53.chunk.js","sourcesContent":["export const YEARS = [\n    \"2006\",\n    \"2007\",\n    \"2008\",\n    \"2009\",\n    \"2010\",\n    \"2011\",\n    \"2012\",\n    \"2013\",\n    \"2014\",\n    \"2015\",\n    \"2016\",\n    \"2017\",\n    \"2018\",\n    \"2019\",\n    \"2020\"\n];\n","import React from 'react';\n\nimport './styles.css';\n\nfunction Chip ({ value, active, onClick }) {\n    return (\n        <div className={`chip ${active ? 'active' : ''}`} onClick={() => onClick(value.toLowerCase())}>{value}</div>\n    )\n}\n\nexport default Chip;\n","import React, { useState } from 'react'\nimport { YEARS } from '../../utils/constants';\nimport Chip from './Chip';\n\nfunction Filter ({ filterClick, initial }) {\n    console.log(initial);\n    const [active, setActive] = useState(initial);\n\n    const filterUpdate = (key, value) => {\n        setActive({ ...active, [key]: value });\n        filterClick(key, value)\n    }\n\n    console.log(active);\n    return (\n        <div>\n            <h2>Filters</h2>\n            <div className=\"bodyContainer\">\n                <div className=\"heading\">Launch Year</div>\n                <div className=\"container\">\n                    {YEARS.map(year => {\n                        return <Chip key={year} value={year} active={active['launch_year'] === year} onClick={(year) => filterUpdate(\"launch_year\", year)} />\n                    })}\n                </div>\n            </div>\n            <div className=\"bodyContainer\">\n                <div className=\"heading\">Successful Launch</div>\n                <div className=\"container\">\n                    {[\"True\", \"False\"].map(value => {\n                        return <Chip key={value} active={active['launch_success'] === value.toLowerCase()} onClick={(value) => filterUpdate(\"launch_success\", value)} value={value} />\n                    })}\n                </div>\n            </div>\n            <div className=\"bodyContainer\">\n                <div className=\"heading\">Successful Landing</div>\n                <div className=\"container\">\n                    {[\"True\", \"False\"].map(value => {\n                        return <Chip key={value} active={active['land_year'] === value.toLowerCase()} onClick={(value) => filterUpdate(\"land_year\", value)} value={value} />\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Filter","import React from 'react';\n\nimport \"./styles.css\"\n\nfunction Card ({ data }) {\n    const isMobile = !!(window.innerWidth < 767);\n    return <div className={`card ${isMobile ? 'marginTop-16' : ''}`}>\n        <div className=\"imageContainer\">\n            <img className=\"patch\" alt=\"patch\" src={data.links.mission_patch_small || \"https://images2.imgbox.com/f9/3a/3kH19hlj_o.png\"} />\n        </div>\n        <div>\n            <h2 className=\"titleh2 marginTop-16\">{data.mission_name} #{data.flight_number}</h2>\n            <div className=\"marginTop-16\">\n                <h3>Mission Ids:</h3>\n                <ul>\n                    {data.mission_id && data.mission_id.length > 0 ? data.mission_id.map(id => {\n                        return <li key={id} className=\"value\">{id}</li>\n                    }) : <li>None</li>}\n                </ul>\n            </div>\n            <div className=\"flex marginTop-16\">\n                <h3>Launch Year:</h3>&nbsp;<span className=\"value\">{data.launch_year}</span>\n            </div>\n            <div className=\"flex marginTop-16\">\n                <h3>Successful Launch:</h3>&nbsp;<p className=\"value\">{`${data.launch_success}`}</p>\n            </div>\n            <div className=\"flex marginTop-16\">\n                <h3>Launch Site:</h3>&nbsp;<p className=\"value\">{data.launch_site.site_name}</p>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Card;","import React from 'react'\n\nimport './style.css'\n\nfunction Footer() {\n    return (\n        <div className=\"flexCenter\">\n            <h2 className=\"footer\">Developed By:</h2>&nbsp;<a href=\"https://www.github.com/bhavesh27\" className=\"value\">Bhavesh Kumar</a>\n        </div>\n    )\n}\n\nexport default Footer;\n","\nconst createActionTypes = (prefix, actionTypeList) => {\n    const actionTypesObject = actionTypeList.reduce((acc, item) => {\n        acc[item] = `${prefix}/${item}`\n        return acc;\n    }, {})\n\n    return actionTypesObject\n}\n\nexport default createActionTypes\n","import axios from 'axios';\n\nconst backendService = axios.create({\n    baseURL: \"https://api.spaceXdata.com/v3\",\n    timeout: 3000\n});\n\nconst requestInterceptor = (request) => {\n    return request;\n  };\n  \nconst responseInterceptor = (response) => {\n    return response;\n};\n\nbackendService.interceptors.request.use(requestInterceptor);\nbackendService.interceptors.response.use(responseInterceptor);\n\nexport default backendService;","import createActionTypes from \"../utils/createActionTypes\";\nimport apiRequest from \"../utils/api\";\n\nexport const appActions = createActionTypes(\"appActions\", [\n  \"FETCH_DATA_SUCCESS\",\n  \"FETCH_DATA_ERROR\",\n  \"FETCH_DATA_REQUEST\",\n]);\n\nconst getRequestConfig = (params) => {\n  return {\n    method: \"GET\",\n    url: `/launches?${params}`,\n  };\n};\n\nexport const fetchDataSuccess = (data) => {\n  return {\n    type: appActions.FETCH_DATA_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n};\n\nexport const fetchDataFailure = (error) => {\n  return {\n    type: appActions.FETCH_DATA_ERROR,\n    payload: {\n      error,\n    },\n  };\n};\n\nexport const fetchDataRequest = () => {\n  return {\n    type: appActions.FETCH_DATA_REQUEST,\n  };\n};\n\nexport const fetchData = (params, dispatch) => {\n  dispatch(fetchDataRequest());\n  return apiRequest\n    .request(getRequestConfig(params))\n    .then((res) => dispatch(fetchDataSuccess(res.data)))\n    .catch((e) => dispatch(fetchDataFailure(e.response.data)));\n};\n","import { appActions } from \"./actions\"\n\nexport const defaultState = {\n    data: {},\n    isFetching: false,\n    isFetched: false,\n    error: null,\n}\n\nexport const appReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case appActions.FETCH_DATA_SUCCESS:\n            return {\n                ...state,\n                data: action.payload.data,\n                isFetching: false,\n                isFetched: true,\n            }\n\n        case appActions.FETCH_DATA_ERROR:\n            return {\n                ...state,\n                isFetching: false,\n                isFetched: false,\n                error: action.payload.error,\n            }\n\n        case appActions.FETCH_DATA_REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n                isFetched: false\n            }\n\n        default:\n            return state\n    }\n}\n","import React, { useReducer, useEffect } from 'react';\n\nimport Filter from '../components/Filter';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer'\n\nimport { fetchData } from './actions';\nimport { appReducer, defaultState } from './reducer';\nimport { useHistory, useLocation } from \"react-router-dom\";\n \nimport './App.css';\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(appReducer, defaultState);\n\n  const history = useHistory();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const initialState = () => {\n    const state = {};\n    for (let [key, value] of params.entries()) {\n      state[key] = value;\n    }\n    return state;\n  }\n\n  const handleFilterClick = (key, value) => {\n    if (params.has(key)) {\n      params.set(key, value);\n    } else {\n      params.append(key, value)\n    }\n    history.push(location.pathname + \"?\" + params.toString())\n  }\n\n  useEffect(() => {\n    let query = \"limit=100\";\n    if (params.toString()) {\n      query += '&' + params.toString();\n    }\n    fetchData(query, dispatch);\n  }, [location.search])\n\n  return (\n    <div className=\"app\">\n      <h1>SpaceX Launch Programs</h1>\n      <div className=\"body\">\n        <div className=\"filterContainer\">\n          <Filter initial={initialState()} filterClick={(key, value) => handleFilterClick(key, value)} />\n        </div>\n        {state.isFetched && <div className=\"cardContainer\">\n          {state.data && state.data.length > 0 ? state.data.map((item, i) => {\n            return <Card data={item} key={i} />\n          }): <div className=\"noContent\">No Content Available</div>}\n        </div>}\n        {state.isFetching && <div className=\"loaderContainer\">\n          <div className=\"loader\"></div>  \n        </div>}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}